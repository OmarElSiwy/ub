ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.StartDefaultTask,"ax",%progbits
  20              		.align	1
  21              		.global	StartDefaultTask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	StartDefaultTask:
  27              	.LVL0:
  28              	.LFB141:
  29              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "CommunicationProtocol/gpio.h"
  23:Core/Src/freertos.c **** #include "CommunicationProtocol/i2c.h"
  24:Core/Src/freertos.c **** #include "CommunicationProtocol/tim.h"
  25:Core/Src/freertos.c **** #include "Components/MPU6050.h"
  26:Core/Src/freertos.c **** #include "Components/Motor.h"
  27:Core/Src/freertos.c **** #include "stm32f4xx_hal_tim.h"
  28:Core/Src/freertos.c **** #include "task.h"
  29:Core/Src/freertos.c **** #include "main.h"
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 2


  30:Core/Src/freertos.c **** #include "cmsis_os.h"
  31:Core/Src/freertos.c **** #include "CommunicationProtocol/usart.h"
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  34:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* USER CODE END Includes */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* USER CODE END PTD */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PM */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END Variables */
  57:Core/Src/freertos.c **** TaskHandle_t defaultTaskHandle = NULL;
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  69:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  72:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  73:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  76:Core/Src/freertos.c **** {
  77:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  78:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  79:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  80:Core/Src/freertos.c ****   /* place for user code */
  81:Core/Src/freertos.c **** }
  82:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  83:Core/Src/freertos.c **** 
  84:Core/Src/freertos.c **** /**
  85:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  86:Core/Src/freertos.c ****   * @param  None
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 3


  87:Core/Src/freertos.c ****   * @retval None
  88:Core/Src/freertos.c ****   */
  89:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  90:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c ****   /* USER CODE END Init */
  93:Core/Src/freertos.c **** 
  94:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  95:Core/Src/freertos.c ****   /* add mutexes, ... */
  96:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  99:Core/Src/freertos.c ****   /* add semaphores, ... */
 100:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 103:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 107:Core/Src/freertos.c ****   /* add queues, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* Create the thread(s) */
 111:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 112:Core/Src/freertos.c ****   xTaskCreate(
 113:Core/Src/freertos.c ****     StartDefaultTask,          // Task function
 114:Core/Src/freertos.c ****     "DefaultTask",             // Name of the task (for debugging purposes)
 115:Core/Src/freertos.c ****     128,                       // Stack size (in words, not bytes!)
 116:Core/Src/freertos.c ****     NULL,                      // Task input parameter
 117:Core/Src/freertos.c ****     tskIDLE_PRIORITY + 1,      // Priority of the task
 118:Core/Src/freertos.c ****     &defaultTaskHandle         // Task handle
 119:Core/Src/freertos.c ****   );
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 122:Core/Src/freertos.c ****   /* add threads, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** }
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 128:Core/Src/freertos.c **** /**
 129:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 130:Core/Src/freertos.c ****   * @param  argument: Not used
 131:Core/Src/freertos.c ****   * @retval None
 132:Core/Src/freertos.c ****   */
 133:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 134:Core/Src/freertos.c **** void StartDefaultTask(const void* argument) {
  30              		.loc 1 134 45 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 134 45 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 4


  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
 135:Core/Src/freertos.c ****   MX_USART2_UART_Init();
  41              		.loc 1 135 3 is_stmt 1 view .LVU2
  42 0002 FFF7FEFF 		bl	MX_USART2_UART_Init
  43              	.LVL1:
 136:Core/Src/freertos.c ****   MX_I2C1_Init();
  44              		.loc 1 136 3 view .LVU3
  45 0006 FFF7FEFF 		bl	MX_I2C1_Init
  46              	.LVL2:
 137:Core/Src/freertos.c **** 
 138:Core/Src/freertos.c ****   MX_GPIO_Init();
  47              		.loc 1 138 3 view .LVU4
  48 000a FFF7FEFF 		bl	MX_GPIO_Init
  49              	.LVL3:
  50              	.L2:
 139:Core/Src/freertos.c ****   while (true)
  51              		.loc 1 139 3 discriminator 1 view .LVU5
 140:Core/Src/freertos.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
  52              		.loc 1 140 5 discriminator 1 view .LVU6
  53 000e 0122     		movs	r2, #1
  54 0010 4FF48051 		mov	r1, #4096
  55 0014 0148     		ldr	r0, .L4
  56 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL4:
 139:Core/Src/freertos.c ****   while (true)
  58              		.loc 1 139 9 discriminator 1 view .LVU7
  59 001a F8E7     		b	.L2
  60              	.L5:
  61              		.align	2
  62              	.L4:
  63 001c 00040240 		.word	1073873920
  64              		.cfi_endproc
  65              	.LFE141:
  67              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  68              		.align	1
  69              		.global	vApplicationGetIdleTaskMemory
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	vApplicationGetIdleTaskMemory:
  75              	.LVL5:
  76              	.LFB139:
  76:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  77              		.loc 1 76 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  77:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  82              		.loc 1 77 3 view .LVU9
  77:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  83              		.loc 1 77 25 is_stmt 0 view .LVU10
  84 0000 034B     		ldr	r3, .L7
  85 0002 0360     		str	r3, [r0]
  78:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  86              		.loc 1 78 3 is_stmt 1 view .LVU11
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 5


  78:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  87              		.loc 1 78 27 is_stmt 0 view .LVU12
  88 0004 034B     		ldr	r3, .L7+4
  89 0006 0B60     		str	r3, [r1]
  79:Core/Src/freertos.c ****   /* place for user code */
  90              		.loc 1 79 3 is_stmt 1 view .LVU13
  79:Core/Src/freertos.c ****   /* place for user code */
  91              		.loc 1 79 25 is_stmt 0 view .LVU14
  92 0008 8023     		movs	r3, #128
  93 000a 1360     		str	r3, [r2]
  81:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  94              		.loc 1 81 1 view .LVU15
  95 000c 7047     		bx	lr
  96              	.L8:
  97 000e 00BF     		.align	2
  98              	.L7:
  99 0010 00000000 		.word	.LANCHOR0
 100 0014 00000000 		.word	.LANCHOR1
 101              		.cfi_endproc
 102              	.LFE139:
 104              		.section	.rodata.MX_FREERTOS_Init.str1.4,"aMS",%progbits,1
 105              		.align	2
 106              	.LC0:
 107 0000 44656661 		.ascii	"DefaultTask\000"
 107      756C7454 
 107      61736B00 
 108              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 109              		.align	1
 110              		.global	MX_FREERTOS_Init
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	MX_FREERTOS_Init:
 116              	.LFB140:
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 117              		.loc 1 89 29 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 00B5     		push	{lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 14, -4
 125 0002 83B0     		sub	sp, sp, #12
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 16
 112:Core/Src/freertos.c ****     StartDefaultTask,          // Task function
 128              		.loc 1 112 3 view .LVU17
 129 0004 064B     		ldr	r3, .L11
 130 0006 0193     		str	r3, [sp, #4]
 131 0008 0123     		movs	r3, #1
 132 000a 0093     		str	r3, [sp]
 133 000c 0023     		movs	r3, #0
 134 000e 8022     		movs	r2, #128
 135 0010 0449     		ldr	r1, .L11+4
 136 0012 0548     		ldr	r0, .L11+8
 137 0014 FFF7FEFF 		bl	xTaskCreate
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 6


 138              	.LVL6:
 125:Core/Src/freertos.c **** 
 139              		.loc 1 125 1 is_stmt 0 view .LVU18
 140 0018 03B0     		add	sp, sp, #12
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 4
 143              		@ sp needed
 144 001a 5DF804FB 		ldr	pc, [sp], #4
 145              	.L12:
 146 001e 00BF     		.align	2
 147              	.L11:
 148 0020 00000000 		.word	.LANCHOR2
 149 0024 00000000 		.word	.LC0
 150 0028 00000000 		.word	StartDefaultTask
 151              		.cfi_endproc
 152              	.LFE140:
 154              		.global	defaultTaskHandle
 155              		.section	.bss.defaultTaskHandle,"aw",%nobits
 156              		.align	2
 157              		.set	.LANCHOR2,. + 0
 160              	defaultTaskHandle:
 161 0000 00000000 		.space	4
 162              		.section	.bss.xIdleStack,"aw",%nobits
 163              		.align	2
 164              		.set	.LANCHOR1,. + 0
 167              	xIdleStack:
 168 0000 00000000 		.space	512
 168      00000000 
 168      00000000 
 168      00000000 
 168      00000000 
 169              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 170              		.align	3
 171              		.set	.LANCHOR0,. + 0
 174              	xIdleTaskTCBBuffer:
 175 0000 00000000 		.space	1152
 175      00000000 
 175      00000000 
 175      00000000 
 175      00000000 
 176              		.text
 177              	.Letext0:
 178              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/machine/_defau
 179              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/_stdint.h"
 180              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 181              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/lib/gcc/arm-none-eabi/10.3.1/include
 182              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/_types.h"
 183              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/reent.h"
 184              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/lock.h"
 185              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 186              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 187              		.file 11 "Core/Inc/Components/MPU6050.h"
 188              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 189              		.file 13 "Core/Inc/CommunicationProtocol/usart.h"
 190              		.file 14 "Core/Inc/CommunicationProtocol/i2c.h"
 191              		.file 15 "Core/Inc/CommunicationProtocol/gpio.h"
 192              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 7


 193              		.file 17 "<built-in>"
ARM GAS  /var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:20     .text.StartDefaultTask:0000000000000000 $t
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:26     .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:63     .text.StartDefaultTask:000000000000001c $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:68     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:74     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:99     .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:105    .rodata.MX_FREERTOS_Init.str1.4:0000000000000000 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:109    .text.MX_FREERTOS_Init:0000000000000000 $t
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:115    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:148    .text.MX_FREERTOS_Init:0000000000000020 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:160    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:156    .bss.defaultTaskHandle:0000000000000000 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:163    .bss.xIdleStack:0000000000000000 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:167    .bss.xIdleStack:0000000000000000 xIdleStack
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:170    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
/var/folders/mj/g8q9qvjj1qg4kbgnh_bz76140000gn/T//cczXhiLW.s:174    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
MX_USART2_UART_Init
MX_I2C1_Init
MX_GPIO_Init
HAL_GPIO_WritePin
xTaskCreate
